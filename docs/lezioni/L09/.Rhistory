# Generazione dei dati
set.seed(123)
n <- 100
x1 <- rnorm(n)
x2 <- x1 + 0.5*rnorm(n)
x1 <- (x1 - mean(x1))/sd(x1)
x2 <- (x2 - mean(x2))/sd(x2)
x <- cbind(x1, x2)
# grafico (utilizzando la stessa scala)
library(MASS)
eqscplot(x1, x2)
# Generazione dei dati
set.seed(123)
n <- 100
x1 <- rnorm(n)
x2 <- x1 + 0.5*rnorm(n)
x1 <- (x1 - mean(x1))/sd(x1)
x2 <- (x2 - mean(x2))/sd(x2)
x <- cbind(x1, x2)
# diagramma di dispersione (utilizzando la stessa scala)
library(MASS)
eqscplot(x1, x2)
# SVD of x
svd_x <- svd(x)
str(svd_x)
(svd_x$v)
# Note how they are proportional to (1, 1) and (1, -1) (exactly). This is because of
# the scaling of the columns
# Add lines corresponding to the (loading vectors of the) principal comps
abline(0, 1)
abline(0, -1)
# SVD di x
svd_x <- svd(x)
str(svd_x)
(svd_x$v)
# Si noti che sono esattamente proporzionali a (1, 1) and (1, -1). Questa Ã¨ una conseguenza della standardizzazione delle colonne
# Aggiungo le linee corrispondenti ai vettori dei pesi delle componenti principali
eqscplot(x1, x2)
abline(0, 1)
abline(0, -1)
# Generazione della risposta
sigma <- 5
errors <- sigma*rnorm(n)
errors <- errors - mean(errors)
sig_easy <- sqrt(n)*svd_x$u[, 1]
sig_hard <- sqrt(n)*svd_x$u[, 2]
y_easy <- sig_easy + errors
y_hard <- sig_hard + errors
# Regressione ridge
lambda_max <- 200
nlambda <- 101
lambda <- seq(from=0, to=lambda_max, length.out=nlambda)
lambda_mat <- rep(lambda, each = 2)
dim(lambda_mat) <- c(2, nlambda)
# Generazione della risposta
sigma <- 5
errors <- sigma*rnorm(n)
errors <- errors - mean(errors)
sig_easy <- sqrt(n)*svd_x$u[, 1]
sig_hard <- sqrt(n)*svd_x$u[, 2]
y_easy <- sig_easy + errors
y_hard <- sig_hard + errors
# Regressione ridge
lambda_max <- 200
nlambda <- 101
lambda <- seq(from=0, to=lambda_max, length.out=nlambda)
lambda_mat <- rep(lambda, each = 2)
dim(lambda_mat) <- c(2, nlambda)
lambda_mat
sig_easy
